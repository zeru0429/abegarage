API End points 
-------------- 
  - You can put this on a shared google doc or create an HTML page for it so that the entire team can access the same documentation. 


  ** - Employees 
    GET All
      Query: 
        limit  
    For: 
      List of Employees page 

    Get Employees
    ------------- 
      request
      GET /api/employees HTTP/1.1
      Host: localhost:8080 
      
      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "limit":10,
        "contacts":
        [
          {
            "employee_id": 1,
            "employee_email": "test@test.com",
            "employee_first_name": "Test",
            "employee_last_name": "Test",
            "employee_phone": "555-555-5555",
            "active_employee": 1,
            "added_date": "2016-11-28T14:10:11.338Z"
          },
          {},
          ...
        ]
      }

    ------------- 

  ** - Single Employee 
    GET by ID 
    POST New Employee
    PUT by ID (FORM)  

    For: 
      Add new Employee page (FORM)  
      Edit Employee page
      Logged in user header

    NOTE: Add active flag  (Only active employees can log in)

    Get Single Employee
    -------------------- 
      request
      GET /api/employee/:id HTTP/1.1
      Host: localhost:8080 

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "employee_id": 1,
        "employee_email": "test@test.com",
        "employee_first_name": "Test",
        "employee_last_name": "Test",
        "employee_phone": "555-555-5555",
        "active_employee": 1,
        "added_date": "2016-11-28T14:10:11.338Z"
      }
    --------------------

    Add New Employee
    ----------------- 
      request
      POST /api/employee HTTP/1.1
      Content-Type: application/json 
      Host: localhost:8080 
      {
        "employee_email": "test@test.com",
        "employee_first_name": "Test",
        "employee_last_name": "Test",
        "employee_phone": "555-555-5555",
        "active_employee": 1,
        "added_date": "2016-11-28T14:10:11.338Z", 
        "employee_password": "8HYsy&^uud*7hh", 
        "company_role_id": "1"
      }

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "success":"true"
      }
    -----------------

    Update Employee
    ---------------  
      request
      PUT /api/employee HTTP/1.1
      Content-Type: application/json 
      Host: localhost:8080 
      {
        "employee_id": 1,
        "employee_first_name": "Test",
        "employee_last_name": "Test",
        "employee_phone": "555-555-5555",
        "active_employee": 1,
      }

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "success":"true"
      }
    -----------------
  
  ** - Services 
    GET All
    For: 
      Display services on order creation page 
        - Only active services show up  


    Get All Services
    ---------------- 
      request
      GET /api/services HTTP/1.1
      Host: localhost:8080 

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        {
          "service_id": 1,
          "service_name": "Oil change",
          "service_description": "Some description about the oil change"
        },
        {},
        ...
      }
    ---------------- 

  ** Single service 
    GET by id 
    POST - New service 
    PUT - Edit service
    DELETE a service (Not advisable as it could have been provided in the past) 
      - Just add a flag that says active service or non active service 

    For: 
      Add new service (FORM) 
      Edit service 

    NOTE: Add active flag (Only active services show up on new order page) 

    Get Single Service
    ------------------ 
      request
      GET /api/service/:id HTTP/1.1
      Host: localhost:8080 

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "service_id": 1,
        "service_name": "Oil change",
        "service_description": "Some description about the oil change"
      }
    ------------------

    Add New Service
    ---------------
      request
      POST /api/service HTTP/1.1
      Content-Type: application/json 
      Host: localhost:8080 
      {
        "service_name": "Oil change",
        "service_description": "Some description about the oil change"
      }

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "success":"true"
      }
    ---------------

    Update Service
    ---------------  
      request
      PUT /api/service HTTP/1.1
      Content-Type: application/json 
      Host: localhost:8080 
      {
        "service_id": 1,
        "service_name": "Oil change updated",
        "service_description": "Some description about the oil change"
      }

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "success":"true"
      }
    ---------------

  ** - Customers 
    GET All 
    Query: 
      limit 
      sortby 

    For: List of customers page 

    Get Customers
    ------------- 
      request
      GET /api/customers HTTP/1.1
      Host: localhost:8080 
      
      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "limit":10,
        "customers":
        [
          {
            "customer_id": 1,
            "customer_email": "test@test.com",
            "customer_phone_number": "555-555-5555",
            "customer_first_name": "Test",
            "customer_last_name": "Test",
            "customer_hash": "khsdgfkujhkjnfdfg7763hdff",
            "active_customer_status": 1,
            "customer_added_date": "2016-11-28T14:10:11.338Z"
          },
          {},
          ...
        ]
      }
    ------------- 

  ** - Single customer 
    GET by ID  
    POST New customer 
    PUT by ID  

    For: 
      Create new customer 
      Customer page (Shows orders at the bottom) 

    Get Single Customer
    -------------------- 
      request
      GET /api/customer/:id HTTP/1.1
      Host: localhost:8080 

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "customer_id": 1,
        "customer_email": "test@test.com",
        "customer_phone_number": "555-555-5555",
        "customer_first_name": "Test",
        "customer_last_name": "Test",
        "customer_hash": "khsdgfkujhkjnfdfg7763hdff",
        "active_customer_status": 1,
        "customer_added_date": "2016-11-28T14:10:11.338Z"
      }
    --------------------

    Add New Customer
    ----------------- 
      request
      POST /api/employee HTTP/1.1
      Content-Type: application/json 
      Host: localhost:8080 
      {
        "customer_email": "test@test.com",
        "customer_phone_number": "555-555-5555",
        "customer_first_name": "Test",
        "customer_last_name": "Test",
        "customer_hash": "khsdgfkujhkjnfdfg7763hdff",
        "active_customer_status": 1,
        "customer_added_date": "2016-11-28T14:10:11.338Z"
      }

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "success":"true"
      }
    -----------------

    Update Customer
    ---------------  
      request
      PUT /api/employee HTTP/1.1
      Content-Type: application/json 
      Host: localhost:8080 
      {
        "customer_id": 1,
        "customer_phone_number": "555-555-5555",
        "customer_first_name": "Test",
        "customer_last_name": "Test",
        "active_customer_status": 1,
      }

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "success":"true"
      }
    -----------------

  ** - Orders 
    GET All 
    Query: 
      limit 
      sortby  
      filter by completed 

    For: 
      - List of all orders to work on sorted by order date 

    Get All Orders
    ---------------- 
      request
      GET /api/orders HTTP/1.1
      Host: localhost:8080 

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        {
          "order_id": 1,
          "employee_id": 1,
          "customer_id": 1,
          "vehicle_id": 1,
          "order_description": "Some description about the order",
          "order_date": "2016-11-28T14:10:11.338Z"
          "estimated_completion_date": "2016-11-28T14:10:11.338Z"
          "completion_date": "",
          "order_completed": 0,
          "order_services": {
            {
              "order_service_id": 1,
              "order_id": 1,
              "service_id": 1,
            },
            {},
            ...
          }
        },
        {},
        ...
      }
    ---------------- 

  ** - Single Order 
    GET by ID 
    POST New Order
    PUT Update order 

    For: 
      Create new order 
      Modify order  
      Order status page 

    Get Single Order
    -------------------- 
      request
      GET /api/order/:id HTTP/1.1
      Host: localhost:8080 

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "order_id": 1,
        "employee_id": 1,
        "customer_id": 1,
        "vehicle_id": 1,
        "order_description": "Some description about the order",
        "order_date": "2016-11-28T14:10:11.338Z"
        "estimated_completion_date": "2016-11-28T14:10:11.338Z"
        "completion_date": "",
        "order_completed": 0,
        "order_services": {
          {
            "order_service_id": 1,
            "order_id": 1,
            "service_id": 1,
          },
          {},
          ...
        }
      }
    --------------------

    Add New Order
    ----------------- 
      request
      POST /api/order HTTP/1.1
      Content-Type: application/json 
      Host: localhost:8080 
      {
        "employee_id": 1,
        "customer_id": 1,
        "vehicle_id": 1,
        "order_description": "Some description about the order",
        "order_date": "2016-11-28T14:10:11.338Z"
        "estimated_completion_date": "2016-11-28T14:10:11.338Z"
        "completion_date": "",
        "order_completed": 0,
        "order_services": {
          {
            "order_service_id": 1,
            "order_id": 1,
            "service_id": 1,
          },
          {},
          ...
        }
      }

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "success":"true"
      }
    -----------------

    Update Order
    ---------------  
      request
      PUT /api/order HTTP/1.1
      Content-Type: application/json 
      Host: localhost:8080 
      {
        "order_id": 1,
        "order_description": "Some description about the order",
        "estimated_completion_date": "2016-11-28T14:10:11.338Z"
        "completion_date": "",
        "order_completed": 0,
        "order_services": {
          {
            "order_service_id": 1,
            "order_id": 1,
            "service_id": 1,
          },
          {},
          ...
        }
      }

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "success":"true"
      }
    -----------------

  ** Single Vehicle  
    GET by id  
    POST New Vehicle 
    PUT by id 

    For: 
      Adding new vehicle 
      Updating vehicle info 
        - Milage should be added based on date 
        - Not just update  

    Get Single Vehicle
    ------------------ 
      request
      GET /api/vehicle/:id HTTP/1.1
      Host: localhost:8080 

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "vehicle_id": 1,
        "customer_id": 1,
        "vehicle_year": "2022",
        "vehicle_make": "Tesla",
        "vehicle_model": "Model S",
        "vehicle_type": "Sedan",
        "vehicle_mileage": "10000",
        "vehicle_tag": "9890Ab2",
        "vehicle_serial": "458008887783543435553434",
        "vehicle_color": "Silver"
      }
    --------------------

    Add New Vehicle
    ---------------
      request
      POST /api/vehicle HTTP/1.1
      Content-Type: application/json 
      Host: localhost:8080 
      {
        "customer_id": 1,
        "vehicle_year": "2022",
        "vehicle_make": "Tesla",
        "vehicle_model": "Model S",
        "vehicle_type": "Sedan",
        "vehicle_mileage": "10000",
        "vehicle_tag": "9890Ab2",
        "vehicle_serial": "458008887783543435553434",
        "vehicle_color": "Silver"
      }

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "success":"true"
      }
    -----------------

    Update Vehicle
    ---------------  
      request
      PUT /api/vehicle HTTP/1.1
      Content-Type: application/json 
      Host: localhost:8080 
      {
        "vehicle_id": 1,
        "vehicle_year": "2022",
        "vehicle_make": "Tesla",
        "vehicle_model": "Model S",
        "vehicle_type": "Sedan",
        "vehicle_mileage": "10000",
        "vehicle_tag": "9890Ab2",
        "vehicle_serial": "458008887783543435553434",
        "vehicle_color": "Silver"
      }

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "success":"true"
      }
    -----------------

  ** - Vehicles Per Customer  
    GET by customer ID 

    For: 
      To display on customer page 
      List of vehicles page  
        - To filter by model and make  

    Get Vehicles Per Customer  
    ------------------------- 
      request
      GET /api/vehicles/:customer_id HTTP/1.1
      Host: localhost:8080 

      response
      HTTP/1.1 200 OK
      Content-Type: application/json
      {
        "customer_id": 1,
        {
          "vehicle_id": 1,
          "customer_id": 1,
          "vehicle_year": "2022",
          "vehicle_make": "Tesla",
          "vehicle_model": "Model S",
          "vehicle_type": "Sedan",
          "vehicle_mileage": "10000",
          "vehicle_tag": "9890Ab2",
          "vehicle_serial": "458008887783543435553434",
          "vehicle_color": "Silver"
        },
        {},
        ...
      }
      
    --------------------
